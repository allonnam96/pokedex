{"ast":null,"code":"export const LOAD_ITEMS = \"items/LOAD_ITEMS\";\nexport const UPDATE_ITEM = \"items/UPDATE_ITEM\";\nexport const REMOVE_ITEM = \"items/REMOVE_ITEM\";\nexport const ADD_ITEM = \"items/ADD_ITEM\";\n\nconst load = (items, pokemonId) => ({\n  type: LOAD_ITEMS,\n  items,\n  pokemonId\n});\n\nconst update = item => ({\n  type: UPDATE_ITEM,\n  item\n});\n\nconst add = item => ({\n  type: ADD_ITEM,\n  item\n});\n\nconst remove = (itemId, pokemonId) => ({\n  type: REMOVE_ITEM,\n  itemId,\n  pokemonId\n});\n\nexport const getItems = pokemonId => async dispatch => {\n  const response = await fetch(`/api/pokemon/${pokemonId}/items`);\n\n  if (response.ok) {\n    const items = await response.json();\n    dispatch(load(items, pokemonId));\n  }\n};\nexport const updateItem = data => async dispatch => {\n  const response = await fetch(`/api/items/${data.id}`, {\n    method: 'put',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n\n  if (response.ok) {\n    const item = await response.json();\n    dispatch(update(item));\n    return item;\n  }\n};\nexport const deleteItem = (itemId, pokemonId) => async dispatch => {\n  const response = await fetch(`/api/items/${itemId}`, {\n    method: 'delete'\n  });\n\n  if (response.ok) {\n    const {\n      id: deletedItemId\n    } = await response.json();\n    dispatch(remove(deletedItemId, pokemonId));\n    return deletedItemId;\n  }\n};\nexport const createItem = (data, pokemonId) => async dispatch => {\n  const response = await fetch(`/api/pokemon/${pokemonId}/items`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n\n  if (response.ok) {\n    const item = await response.json();\n    dispatch(add(item));\n    return item;\n  }\n};\nconst initialState = {};\n\nconst itemsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_ITEMS:\n      const newItems = {};\n      action.items.forEach(item => {\n        newItems[item.id] = item;\n      });\n      return { ...state,\n        ...newItems\n      };\n\n    case REMOVE_ITEM:\n      const newState = { ...state\n      };\n      delete newState[action.itemId];\n      return newState;\n\n    case ADD_ITEM:\n    case UPDATE_ITEM:\n      return { ...state,\n        [action.item.id]: action.item\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default itemsReducer;","map":{"version":3,"names":["LOAD_ITEMS","UPDATE_ITEM","REMOVE_ITEM","ADD_ITEM","load","items","pokemonId","type","update","item","add","remove","itemId","getItems","dispatch","response","fetch","ok","json","updateItem","data","id","method","headers","body","JSON","stringify","deleteItem","deletedItemId","createItem","initialState","itemsReducer","state","action","newItems","forEach","newState"],"sources":["/Users/allonnam/Downloads/pokedex full/backend/frontend/src/store/items.js"],"sourcesContent":["export const LOAD_ITEMS = \"items/LOAD_ITEMS\";\nexport const UPDATE_ITEM = \"items/UPDATE_ITEM\";\nexport const REMOVE_ITEM = \"items/REMOVE_ITEM\";\nexport const ADD_ITEM = \"items/ADD_ITEM\";\n\nconst load = (items, pokemonId) => ({\n  type: LOAD_ITEMS,\n  items,\n  pokemonId\n});\n\nconst update = (item) => ({\n  type: UPDATE_ITEM,\n  item\n});\n\nconst add = (item) => ({\n  type: ADD_ITEM,\n  item\n});\n\nconst remove = (itemId, pokemonId) => ({\n  type: REMOVE_ITEM,\n  itemId,\n  pokemonId\n});\n\nexport const getItems = (pokemonId) => async (dispatch) => {\n  const response = await fetch(`/api/pokemon/${pokemonId}/items`);\n\n  if (response.ok) {\n    const items = await response.json();\n    dispatch(load(items, pokemonId));\n  }\n};\n\nexport const updateItem = data => async dispatch => {\n  const response = await fetch(`/api/items/${data.id}`, {\n    method: 'put',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n\n  if (response.ok) {\n    const item = await response.json();\n    dispatch(update(item));\n    return item;\n  }\n};\n\nexport const deleteItem = (itemId, pokemonId) => async dispatch => {\n  const response = await fetch(`/api/items/${itemId}`, {\n    method: 'delete',\n  });\n\n  if (response.ok) {\n    const { id: deletedItemId } = await response.json();\n    dispatch(remove(deletedItemId, pokemonId));\n    return deletedItemId;\n  }\n};\n\nexport const createItem = (data, pokemonId) => async dispatch => {\n  const response = await fetch(`/api/pokemon/${pokemonId}/items`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n\n  if (response.ok) {\n    const item = await response.json();\n    dispatch(add(item));\n    return item;\n  }\n};\n\nconst initialState = {};\n\nconst itemsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_ITEMS: \n      const newItems = {};\n      action.items.forEach(item => {\n        newItems[item.id] = item;\n      })\n      return {\n        ...state,\n        ...newItems\n      }\n    case REMOVE_ITEM: \n      const newState = { ...state };\n      delete newState[action.itemId];\n      return newState;\n    case ADD_ITEM:\n    case UPDATE_ITEM: \n      return {\n        ...state,\n        [action.item.id]: action.item\n      };\n    default:\n      return state;\n  }\n};\n\nexport default itemsReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}